name: GitHub Flow CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Website Build & Test
  website:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./website
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "Linting completed with warnings"
      
    - name: Run type checking
      run: npx tsc --noEmit
      
    - name: Build website
      run: npm run build
      
    - name: Test build output
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - .next directory not found"
          exit 1
        fi
        echo "Build successful"

  # Extension Build & Test
  extension:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linkedin-crm-extension/ui
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: linkedin-crm-extension/ui/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Validate extension
      run: |
        if [ ! -f "../manifest.json" ]; then
          echo "Extension manifest not found"
          exit 1
        fi
        echo "Extension build successful"

  # Backend Build & Test
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linkedin-crm-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: linkedin-crm-backend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "Linting completed with warnings"
      
    - name: Run type checking
      run: npx tsc --noEmit
      
    - name: Build backend
      run: npm run build

  # Security Scan
  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # required to upload SARIF results
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Aqua Security Trivy
      uses: aquasecurity/trivy-action@0.33.1
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      # Use v3 - v1/v2 are deprecated and can fail the job
      uses: github/codeql-action/upload-sarif@v3
      # Only try to upload SARIF when running in the repository (skip uploads on fork PRs)
      if: ${{ github.event_name != 'pull_request' }}
      with:
        sarif_file: 'trivy-results.sarif'

  # Deploy to Staging (develop branch)
  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: [website, extension, backend, security]
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add staging deployment commands here

  # Deploy to Production (main branch)
  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: [website, extension, backend, security]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add production deployment commands here
